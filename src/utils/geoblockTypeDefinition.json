{
  "RasterBlock": {
    "class": "RasterBlock",
    "description": "raster block",
    "parameters": []
  },
  "NumberBlock": {
    "class": "NumberBlock",
    "description": "number block",
    "parameters": []
  },
  "Add": {
    "class": "dask_geomodeling.raster.elemwise.Add",
    "description": "add block",
    "parameters": [
      {
        "name": "a",
        "type": [
          "number",
          "raster_block"
        ]
      },
      {
        "name": "b",
        "type": [
          "number",
          "raster_block"
        ]
      }
    ]
  },
  "And": {
    "class": "dask_geomodeling.raster.elemwise.And",
    "description": "Returns True where both inputs are True.",
    "parameters": [
      {
        "name": "a",
        "type": [
          "boolean",
          "raster_block"
        ]
      },
      {
        "name": "b",
        "type": [
          "boolean",
          "raster_block"
        ]
      }
    ]
  },
  "Classify": {
    "class": "dask_geomodeling.raster.misc.Classify",
    "description": "classify block",
    "parameters": [
      {
        "name": "store",
        "type": "raster_block"
      },
      {
        "name": "bin",
        "type": "array",
        "items": {
          "type": "array",
          "prefixItems": [
            {
              "type": ["boolean", "integer"]
            },
            {
              "type": "number"
            }
          ]
        }
      },
      {
        "name": "right",
        "type": "boolean",
        "default": false
      }
    ]
  },
  "Clip": {
    "class": "dask_geomodeling.raster.misc.Clip",
    "description": "clip block",
    "parameters": [
      {
        "name": "store",
        "type": "raster_block"
      },
      {
        "name": "source",
        "type": "raster_block"
      }
    ]
  },
  "Cumulative": {
    "class": "dask_geomodeling.raster.temporal.Cumulative",
    "description": "cumulative block",
    "parameters": [
      {
        "name": "source",
        "type": "raster_block"
      },
      {
        "name": "statistic",
        "type": "enum",
        "enum": [
          "sum",
          "count"
        ]
      },
      {
        "name": "frequency",
        "type": "string",
        "default": "None"
      },
      {
        "name": "timezone",
        "type": "string",
        "default": "UTC"
      }
    ]
  },
  "Divide": {
    "class": "dask_geomodeling.raster.elemwise.Divide",
    "description": "divide block",
    "parameters": [
      {
        "name": "a",
        "type": [
          "number",
          "raster_block"
        ]
      },
      {
        "name": "b",
        "type": [
          "number",
          "raster_block"
        ]
      }
    ]
  },
  "Equal": {
    "class": "dask_geomodeling.raster.elemwise.Equal",
    "description": "equal block",
    "parameters": [
      {
        "name": "a",
        "type": [
          "number",
          "raster_block"
        ]
      },
      {
        "name": "b",
        "type": [
          "number",
          "raster_block"
        ]
      }
    ]
  },
  "Exp": {
    "class": "dask_geomodeling.raster.elemwise.Exp",
    "description": "Return e raised to the power of the raster values.",
    "parameters": [
      {
        "name": "x",
        "type": "raster_block"
      }
    ]
  },
  "FillNoData": {
    "class": "dask_geomodeling.raster.elemwise.FillNoData",
    "description": "fill no data block",
    "parameters": {
      "type": "array",
      "items": {
        "type": "raster_block"
      }
    }
  },
  "Greater": {
    "class": "dask_geomodeling.raster.elemwise.Greater",
    "description": "Compares the values of two rasters and returns True if an element in the first term is greater.",
    "parameters": [
      {
        "name": "a",
        "type": [
          "number",
          "raster_block"
        ]
      },
      {
        "name": "b",
        "type": [
          "number",
          "raster_block"
        ]
      }
    ]
  },
  "GreaterEqual": {
    "class": "dask_geomodeling.raster.elemwise.GreaterEqual",
    "description": "Compares the values of two rasters and returns True if an element in the first term is greater or equal.",
    "parameters": [
      {
        "name": "a",
        "type": [
          "number",
          "raster_block"
        ]
      },
      {
        "name": "b",
        "type": [
          "number",
          "raster_block"
        ]
      }
    ]
  },
  "Group": {
    "class": "dask_geomodeling.raster.combine.Group",
    "description": "group block",
    "parameters": {
      "type": "array",
      "items": {
        "type": "raster_block"
      }
    }
  },
  "Invert": {
    "class": "dask_geomodeling.raster.elemwise.Invert",
    "description": "Logically invert a raster (swap True and False).",
    "parameters": [
      {
        "name": "x",
        "type": "raster_block"
      }
    ]
  },
  "IsData": {
    "class": "dask_geomodeling.raster.elemwise.IsData",
    "description": "Return True where raster has data.",
    "parameters": [
      {
        "name": "store",
        "type": "raster_block"
      }
    ]
  },
  "IsNoData": {
    "class": "dask_geomodeling.raster.elemwise.IsNoData",
    "description": "Return True where raster has no data.",
    "parameters": [
      {
        "name": "store",
        "type": "raster_block"
      }
    ]
  },
  "Less": {
    "class": "dask_geomodeling.raster.elemwise.Less",
    "description": "Compares the values of two rasters and returns True if an element in the first term is less.",
    "parameters": [
      {
        "name": "a",
        "type": [
          "number",
          "raster_block"
        ]
      },
      {
        "name": "b",
        "type": [
          "number",
          "raster_block"
        ]
      }
    ]
  },
  "LessEqual": {
    "class": "dask_geomodeling.raster.elemwise.LessEqual",
    "description": "Compares the values of two rasters and returns True if an element in the first term is less or equal.",
    "parameters": [
      {
        "name": "a",
        "type": [
          "number",
          "raster_block"
        ]
      },
      {
        "name": "b",
        "type": [
          "number",
          "raster_block"
        ]
      }
    ]
  },
  "Log": {
    "class": "dask_geomodeling.raster.elemwise.Log",
    "description": "Return natural logarithm of the raster values.",
    "parameters": [
      {
        "name": "x",
        "type": "raster_block"
      }
    ]
  },
  "Log10": {
    "class": "dask_geomodeling.raster.elemwise.Log10",
    "description": "Return the base 10 logarithm of the raster values.",
    "parameters": [
      {
        "name": "x",
        "type": "raster_block"
      }
    ]
  },
  "MaskBelow": {
    "class": "dask_geomodeling.raster.misc.MaskBelow",
    "description": "mask below block",
    "parameters": [
      {
        "name": "store",
        "type": "raster_block"
      },
      {
        "name": "value",
        "type": "number"
      }
    ]
  },
  "MemorySource": {
    "class": "dask_geomodeling.sources.MemorySource",
    "description": "memory source",
    "parameters": [
      {
        "name": "data",
        "type": "number"
      },
      {
        "name": "no_data_value",
        "type": "number"
      },
      {
        "name": "projection",
        "type": "string"
      },
      {
        "name": "pixel_size",
        "type": "float"
      },
      {
        "name": "pixel_origin",
        "type": "float"
      },
      {
        "name": "time_first",
        "type": "integer"
      },
      {
        "name": "time_delta",
        "type": "integer"
      },
      {
        "name": "metadata",
        "type": "array",
        "items": {
          "type": "any"
        }
      }
    ]
  },
  "Multiply": {
    "class": "dask_geomodeling.raster.elemwise.Multiply",
    "description": "multiply block",
    "parameters": [
      {
        "name": "a",
        "type": [
          "number",
          "raster_block"
        ]
      },
      {
        "name": "b",
        "type": [
          "number",
          "raster_block"
        ]
      }
    ]
  },
  "NotEqual": {
    "class": "dask_geomodeling.raster.elemwise.NotEqual",
    "description": "not equal block",
    "parameters": [
      {
        "name": "a",
        "type": [
          "number",
          "raster_block"
        ]
      },
      {
        "name": "b",
        "type": [
          "number",
          "raster_block"
        ]
      }
    ]
  },
  "Or": {
    "class": "dask_geomodeling.raster.elemwise.Or",
    "description": "Returns True where any of inputs is True.",
    "parameters": [
      {
        "name": "a",
        "type": [
          "boolean",
          "raster_block"
        ]
      },
      {
        "name": "b",
        "type": [
          "boolean",
          "raster_block"
        ]
      }
    ]
  },
  "Place": {
    "class": "dask_geomodeling.raster.spatial.Place",
    "description": "place block",
    "parameters": [
      {
        "name": "store",
        "type": "raster_block"
      },
      {
        "name": "place_projection",
        "type": "string"
      },
      {
        "name": "anchor",
        "type": "array",
        "prefixItems": [
          { "type": "number" },
          { "type": "number" }
        ]
      },
      {
        "name": "coordinates",
        "type": "array",
        "items": {
          "type": "array",
          "prefixItems": [
            { "type": "number" },
            { "type": "number" }
          ]
        }
      },
      {
        "name": "statistic",
        "type": "enum",
        "enum": [
          "last",
          "fist",
          "count",
          "sum",
          "mean",
          "min",
          "max",
          "argmin",
          "argmax",
          "product",
          "std",
          "var",
          "p<number>"
        ]
      }
    ]
  },
  "Power": {
    "class": "dask_geomodeling.raster.elemwise.Power",
    "description": "power block",
    "parameters": [
      {
        "name": "a",
        "type": [
          "number",
          "raster_block"
        ]
      },
      {
        "name": "b",
        "type": [
          "number",
          "raster_block"
        ]
      }
    ]
  },
  "Rasterize": {
    "class": "dask_geomodeling.misc.Rasterize",
    "description": "rasterize block",
    "parameters": [
      {
        "name": "source",
        "type": "geometry_block"
      },
      {
        "name": "column_name",
        "type": "string"
      },
      {
        "name": "dtype",
        "type": "string",
        "default": "int32"
      }
    ]
  },
  "Reclassify": {
    "class": "dask_geomodeling.raster.misc.Reclassify",
    "description": "reclassify block",
    "parameters": [
      {
        "name": "store",
        "type": "raster_block"
      },
      {
        "name": "bin",
        "type": "array",
        "items": {
          "type": "array",
          "prefixItems": [
            {
              "type": ["boolean", "integer"]
            },
            {
              "type": "number"
            }
          ]
        }
      },
      {
        "name": "select",
        "type": "boolean",
        "default": false
      }
    ]
  },
  "Snap": {
    "class": "dask_geomodeling.raster.temporal.Snap",
    "description": "snap block",
    "parameters": [
      {
        "name": "store",
        "type": "raster_block"
      },
      {
        "name": "index",
        "type": "raster_block"
      }
    ]
  },
  "Step": {
    "class": "dask_geomodeling.raster.misc.Step",
    "description": "step block",
    "parameters": [
      {
        "name": "store",
        "type": "raster_block"
      },
      {
        "name": "left",
        "type": "number",
        "default": 0
      },
      {
        "name": "right",
        "type": "number",
        "default": 1
      },
      {
        "name": "value",
        "type": "number",
        "default": 0
      },
      {
        "name": "at",
        "type": "number"
      }
    ]
  },
  "Subtract": {
    "class": "dask_geomodeling.raster.elemwise.Subtract",
    "description": "subtract block",
    "parameters": [
      {
        "name": "a",
        "type": [
          "number",
          "raster_block"
        ]
      },
      {
        "name": "b",
        "type": [
          "number",
          "raster_block"
        ]
      }
    ]
  },
  "TemporalAggregate": {
    "class": "dask_geomodeling.raster.temporal.TemporalAggregate",
    "description": "temporal aggregate",
    "parameters": [
      {
        "name": "source",
        "type": "raster_block"
      },
      {
        "name": "frequency",
        "type": "string",
        "default": "None"
      },
      {
        "name": "statistic",
        "type": "enum",
        "enum":[
          "sum",
          "count",
          "mean",
          "min",
          "max"
        ]
      },
      {
        "name": "closed",
        "type": "enum",
        "enum":[
          "left",
          "right",
          "None"
        ]
      },
      {
        "name": "label",
        "type": "enum",
        "enum":[
          "left",
          "right",
          "None"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "default": "UTC"
      }
    ]
  },
  "Xor": {
    "class": "dask_geomodeling.raster.elemwise.Xor",
    "description": "Exclusive or: returns True where exactly one of the inputs is True.",
    "parameters": [
      {
        "name": "a",
        "type": [
          "boolean",
          "raster_block"
        ]
      },
      {
        "name": "b",
        "type": [
          "boolean",
          "raster_block"
        ]
      }
    ]
  }
}